{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Support for a wide range of e-book formats, custom fonts and styling, profiles, extensive gesture support, highlight export, progress sync, a file browser, an SSH server. This is just a fraction of what KOReader has to offer. And you don't need the newest ebook reader to run KOReader either. The application is so lightweight and fast that it can invigorate even the most lethargic ereader you'd have otherwise considered replacing. Discovering KOReader's hidden treasures and figuring out how to get the most out of this application can be quite an adventure. An adventure that you can start by picking through my own discoveries that I document here. Hardware and software KOReader's functionality is device-specific. I use the following setup to document the application's features: Kobo Libra 2 with the latest stable version of KOReader Kobo Glo HD with the latest development version of KOReader Linux Mint 21 with the latest version of Calibre From Draft to EPUB book","title":"Introduction"},{"location":"#introduction","text":"Support for a wide range of e-book formats, custom fonts and styling, profiles, extensive gesture support, highlight export, progress sync, a file browser, an SSH server. This is just a fraction of what KOReader has to offer. And you don't need the newest ebook reader to run KOReader either. The application is so lightweight and fast that it can invigorate even the most lethargic ereader you'd have otherwise considered replacing. Discovering KOReader's hidden treasures and figuring out how to get the most out of this application can be quite an adventure. An adventure that you can start by picking through my own discoveries that I document here. Hardware and software KOReader's functionality is device-specific. I use the following setup to document the application's features: Kobo Libra 2 with the latest stable version of KOReader Kobo Glo HD with the latest development version of KOReader Linux Mint 21 with the latest version of Calibre","title":"Introduction"},{"location":"#from-draft-to-epub-book","text":"","title":"From Draft to EPUB book"},{"location":"01-custom-fonts/","text":"Add custom fonts Probably the very first thing you'd want to do is to add custom fonts to KOReader, which is really easy to do. Copy a folder with .ttf files to koreader/fonts . In KOReader, open the top bar and choose Document -> Font . To set the desired font as the new default, long-tap on it and tap the Set as default button. If you need a high-quality open-source font suitable for reading, try Vollkorn .","title":"Add custom fonts"},{"location":"01-custom-fonts/#add-custom-fonts","text":"Probably the very first thing you'd want to do is to add custom fonts to KOReader, which is really easy to do. Copy a folder with .ttf files to koreader/fonts . In KOReader, open the top bar and choose Document -> Font . To set the desired font as the new default, long-tap on it and tap the Set as default button. If you need a high-quality open-source font suitable for reading, try Vollkorn .","title":"Add custom fonts"},{"location":"02-switch-books/","text":"Switch between two books If you read two books in parallel, and you frequently switch between them, you can save a few taps by assigning the switch action to the upper-left corner of the screen. To do that, open the top bar and choose Settings -> Taps and gestures -> Gesture manager -> Tap corner -> Top left -> General and enable the Open previous document option. You can now switch between two books by tapping on the upper-left corner of the screen. If you prefer to see a list of recent books instead of automatically switching to the latest one, enable the History option instead of Open previous document . Using the described technique, you can customize the behavior of other corners.","title":"Switch between two books"},{"location":"02-switch-books/#switch-between-two-books","text":"If you read two books in parallel, and you frequently switch between them, you can save a few taps by assigning the switch action to the upper-left corner of the screen. To do that, open the top bar and choose Settings -> Taps and gestures -> Gesture manager -> Tap corner -> Top left -> General and enable the Open previous document option. You can now switch between two books by tapping on the upper-left corner of the screen. If you prefer to see a list of recent books instead of automatically switching to the latest one, enable the History option instead of Open previous document . Using the described technique, you can customize the behavior of other corners.","title":"Switch between two books"},{"location":"03-screensaver/","text":"Set current book cover as screensaver While an e-ink display doesn't require a screensaver, there is nothing wrong with replacing the plain Sleeping message with something more informative. Something like the cover of the current book along with the reading progress. Open the top bar, choose Settings -> Screen -> Screensaver , and enable Use last book's cover as screensaver . Enable Add message to screensaver , then choose Settings -> Screensaver message . Specify the Page %c of %t message to show the current and total page count.","title":"Set current book cover as screensaver"},{"location":"03-screensaver/#set-current-book-cover-as-screensaver","text":"While an e-ink display doesn't require a screensaver, there is nothing wrong with replacing the plain Sleeping message with something more informative. Something like the cover of the current book along with the reading progress. Open the top bar, choose Settings -> Screen -> Screensaver , and enable Use last book's cover as screensaver . Enable Add message to screensaver , then choose Settings -> Screensaver message . Specify the Page %c of %t message to show the current and total page count.","title":"Set current book cover as screensaver"},{"location":"04-default-settings/","text":"Change default settings Long-tap on a configuration option prompt to set it as default. For example, long-tap on the desired value of the Line Spacing option, and tap Set as default .","title":"Change default settings"},{"location":"04-default-settings/#change-default-settings","text":"Long-tap on a configuration option prompt to set it as default. For example, long-tap on the desired value of the Line Spacing option, and tap Set as default .","title":"Change default settings"},{"location":"05-select-translation/","text":"Select translation language In theory, the translation feature in KOReader is supposed to automatically detect the source language. But often it identifies languages incorrectly. To solve the problem, open the top bar, switch to Lookup -> Translation settings , and set Translate from book language to the desired language.","title":"Select translation language"},{"location":"05-select-translation/#select-translation-language","text":"In theory, the translation feature in KOReader is supposed to automatically detect the source language. But often it identifies languages incorrectly. To solve the problem, open the top bar, switch to Lookup -> Translation settings , and set Translate from book language to the desired language.","title":"Select translation language"},{"location":"06-auto-show-bottom-menu/","text":"Disable auto-show bottom menu By default, activating the top bar also opens the bottom menu. It's meant as a convenience, but in most cases, it quickly becomes a nuisance. To disable this option, open the top bar, choose Settings -> Taps and gestures -> Activate menu and disable the Auto-show bottom menu option.","title":"Disable auto-show bottom menu"},{"location":"06-auto-show-bottom-menu/#disable-auto-show-bottom-menu","text":"By default, activating the top bar also opens the bottom menu. It's meant as a convenience, but in most cases, it quickly becomes a nuisance. To disable this option, open the top bar, choose Settings -> Taps and gestures -> Activate menu and disable the Auto-show bottom menu option.","title":"Disable auto-show bottom menu"},{"location":"07-open-last-viewed-book/","text":"Open with the last viewed book By default, when you launch KOReader, it opens the file manager. To make it start with the last viewed book, open the top bar and switch to the file manager. Tap on the top header to open the main menu, switch to the file manager section, and select Start with -> Start with last file .","title":"Open with the last viewed book"},{"location":"07-open-last-viewed-book/#open-with-the-last-viewed-book","text":"By default, when you launch KOReader, it opens the file manager. To make it start with the last viewed book, open the top bar and switch to the file manager. Tap on the top header to open the main menu, switch to the file manager section, and select Start with -> Start with last file .","title":"Open with the last viewed book"},{"location":"08-profiles/","text":"Using profiles Using the profiles, you can create multiple reading configurations and quickly switch between them. For example, you can create a dedicated profile for night reading, with specific frontlight settings (brightness and color temperature), night mode enabled, etc. And you can create a daytime profile with both the frontline and night mode off. To create a profile, open the top bar and choose Tools -> Profiles -> New , configure the desired settings, and you are done. To enable the created profile, long-tap on it.","title":"Using profiles"},{"location":"08-profiles/#using-profiles","text":"Using the profiles, you can create multiple reading configurations and quickly switch between them. For example, you can create a dedicated profile for night reading, with specific frontlight settings (brightness and color temperature), night mode enabled, etc. And you can create a daytime profile with both the frontline and night mode off. To create a profile, open the top bar and choose Tools -> Profiles -> New , configure the desired settings, and you are done. To enable the created profile, long-tap on it.","title":"Using profiles"},{"location":"09-export-highlights/","text":"Export highlights KOReader makes it easy to export all your notes and hightlights. Open the top bar, choose Tools -> Export highlights , choose the desired format, then export all notes from the currently opened book or from the entire library.","title":"Export highlights"},{"location":"09-export-highlights/#export-highlights","text":"KOReader makes it easy to export all your notes and hightlights. Open the top bar, choose Tools -> Export highlights , choose the desired format, then export all notes from the currently opened book or from the entire library.","title":"Export highlights"},{"location":"10-json-to-markdown/","text":"Convert notes from JSON to Markdown KOReader allows you to export notes in the HTML and JSON formats. But if you prefer to have your highlights in the Markdown format, the KOReader to Markdown got you covered. Upload the exported JSON file, and get the Markdown-formatted text in return. If you prefer to host the tool on your own Linux server or local machine, deploying it is relatively straightforward. On Ubuntu and Linux Mint, this can be done using the following commands: sudo apt install yarn git clone https://gitlab.com/uroybd/koreader-to-markdown.git cd koreader-to-markdown yarn yarn serve","title":"Convert notes from JSON to Markdown"},{"location":"10-json-to-markdown/#convert-notes-from-json-to-markdown","text":"KOReader allows you to export notes in the HTML and JSON formats. But if you prefer to have your highlights in the Markdown format, the KOReader to Markdown got you covered. Upload the exported JSON file, and get the Markdown-formatted text in return. If you prefer to host the tool on your own Linux server or local machine, deploying it is relatively straightforward. On Ubuntu and Linux Mint, this can be done using the following commands: sudo apt install yarn git clone https://gitlab.com/uroybd/koreader-to-markdown.git cd koreader-to-markdown yarn yarn serve","title":"Convert notes from JSON to Markdown"},{"location":"11-calibre-connect/","text":"Send books wirelessly from Calibre If you happen to use Calibre to manage books on a regular machine, you can access its library from the ereader through Wi-Fi. In Calibre, choose Connect/Share -> Start wireless device connection . In KOReader, open the top bar and switch to Tools -> Calibre . Choose Wireless settings -> Enable wireless client . Return to the Tools -> Calibre section, tap Connect , then long-tap on the desired folder to set it as the destination directory for files sent from Calibre. Calibre displays a notification when it detects the ereader, and you can then use the Send to device button or context menu to push the desired books to the ereader.","title":"Send books wirelessly from Calibre"},{"location":"11-calibre-connect/#send-books-wirelessly-from-calibre","text":"If you happen to use Calibre to manage books on a regular machine, you can access its library from the ereader through Wi-Fi. In Calibre, choose Connect/Share -> Start wireless device connection . In KOReader, open the top bar and switch to Tools -> Calibre . Choose Wireless settings -> Enable wireless client . Return to the Tools -> Calibre section, tap Connect , then long-tap on the desired folder to set it as the destination directory for files sent from Calibre. Calibre displays a notification when it detects the ereader, and you can then use the Send to device button or context menu to push the desired books to the ereader.","title":"Send books wirelessly from Calibre"},{"location":"12-opds/","text":"Access Calibre library via OPDS Calibre can share the entire library in the OPDS format, which makes it possible to browse and download books using KOReader. In Calibre, choose Connect/Share -> Start content server to enable the OPDS catalog. In KOReader, open the top bar and launch the file browser. Tap the top bar in the file browser, and choose Lookup -> OPDS catalog -> Local calibre library . You can then browse and download books from the Calibre library.","title":"Access Calibre library via OPDS"},{"location":"12-opds/#access-calibre-library-via-opds","text":"Calibre can share the entire library in the OPDS format, which makes it possible to browse and download books using KOReader. In Calibre, choose Connect/Share -> Start content server to enable the OPDS catalog. In KOReader, open the top bar and launch the file browser. Tap the top bar in the file browser, and choose Lookup -> OPDS catalog -> Local calibre library . You can then browse and download books from the Calibre library.","title":"Access Calibre library via OPDS"},{"location":"13-koreader-rync/","text":"Back up KOReader book metadata with rsync For each book, KOReader creates a metadata file that contains book settings, notes, current position, etc. And while you can sync the current position and export notes, it also makes sense to keep a backup of all the important data. To make it easier to manage both the content and metadata, use a dedicated directory on your ereader. For example, I have the Library directory on my Kobo device. All books are stored there, grouped in subdirectories by language, as follows: Library English Italiano Dansk This way, I can back up everything by syncing the Library directory and its entire contents using rsync. There are two ways to do that. The simplest approach is to connect the ereader on a machine that has rsync. I use Linux Mint, so as soon as I plug my Kobo, the system automatically mounts it in /media/$USER/KOBOeReader . Then it's a matter of running the appropriate rsync command. For example: rsync -avh --delete /media/ $USER /KOBOeReader/Library/ /path/to/backup/dir Instead of backing up the data to the local machine, you can push the data to a remote Linux machine via SSH: rsync -avhz --delete -P -e \"ssh -p 22\" /media/ $USER /KOBOreader/Library/ user@127.0.0.1:/path/to/backup/dir That's all fine and dandy, but you need a machine with rsync for this approach to work. A slightly more technical but versatile approach is to install rsync on your reader, so you can run backup operations directly on the device itself. To install rsync on a Kobo device, download and install Kobo Stuff . Launch KOReader, open the top bar, switch to Tools -> More tools -> Terminal emulator , and tap Open terminal session . Run the rsync command that syncs the content of the Library directory to a Linux machine. Here's the command I use to back up the data to a Linux server running on my local network: rsync -avhz --delete -P -e \"ssh -p 22\" /mnt/onboard/Library/ user@127.0.0.1:/path/to/library Instead of laboriously entering long rsync commands using the built-in keyboard, you can speed up the process by adding the desired commands to the koreader/.ash_history file. Alternatively, you can write a shell script to automate the task. Create a text file named up.sh in the koreader/scripts/ and add the following code (adjust the examples as needed): #!/bin/sh rsync -avhz --delete -P -e \"ssh -p 22\" /mnt/onboard/Library/ USER@127.0.0.1:/path/to/library rsync -avhz --delete -P -e \"ssh -p 22\" /mnt/onboard/.adds/koreader/clipboard/ USER@127.0.0.1:/path/to/export Save the file and make it executable using the chmod +x /koreader/scripts/up.sh command. To launch the script in the ereader, open the terminal emulator and run the /path/to/koreader/scripts/up.sh command. If you happen to use a second ereader, and you want to download the saved settings and data, all you have to do is to create a shell script that runs the following commands: #!/bin/sh rsync -avhz --delete --no-g --no-o -P -e \"ssh -p 22\" USER@127.0.0.1:/path/to/library/ /mnt/onboard/Library rsync -avhz --delete --no-g --no-o -P -e \"ssh -p 22\" USER@127.0.0.1:/path/to/clipboard/ /mnt/onboard/.adds/koreader/clipboard Sync workaround Running the described rsync-based shell script to download KOReader data doesn't affect the currently opened book. A simple workaround is to open a book that you are not reading and then run the script. I usually open the KOreader Quickstart Guide book, and then run the script. Configure passwordless SSH access Every time you run the scripts described above, you'd be prompted to enter the password twice, which can quickly become a nuisance. To fix this, generate an SSH key pair in KOReader, and add the public key to the list of authorized keys on the remote machine. To generate an SSH key pair, launch the terminal emulator in KOReader and run the ssh-keygen command. Follow the prompts, but skip specifying a passphrase. Run the cat .ssh/*.pub command and copy the key. This generates a key pair in the /usr/local/niluje/usbnet/etc/dot.ssh/ directory. To make sure that the keys are there, run the ssh-agent sh -c 'ssh-add; ssh-add -L' command. Copy the /usr/local/niluje/usbnet/etc/dot.ssh/id_rsa.pub file to a Linux machine, and use the command below to add it to the authorized_keys file on the remote server: cat id_rsa.pub | ssh USER@127.0.0.1 \"mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys\" From now on you can run the shell scripts (or any comands and actions that require an SSH connection to the remote machine) without password.","title":"Back up KOReader book metadata with rsync"},{"location":"13-koreader-rync/#back-up-koreader-book-metadata-with-rsync","text":"For each book, KOReader creates a metadata file that contains book settings, notes, current position, etc. And while you can sync the current position and export notes, it also makes sense to keep a backup of all the important data. To make it easier to manage both the content and metadata, use a dedicated directory on your ereader. For example, I have the Library directory on my Kobo device. All books are stored there, grouped in subdirectories by language, as follows: Library English Italiano Dansk This way, I can back up everything by syncing the Library directory and its entire contents using rsync. There are two ways to do that. The simplest approach is to connect the ereader on a machine that has rsync. I use Linux Mint, so as soon as I plug my Kobo, the system automatically mounts it in /media/$USER/KOBOeReader . Then it's a matter of running the appropriate rsync command. For example: rsync -avh --delete /media/ $USER /KOBOeReader/Library/ /path/to/backup/dir Instead of backing up the data to the local machine, you can push the data to a remote Linux machine via SSH: rsync -avhz --delete -P -e \"ssh -p 22\" /media/ $USER /KOBOreader/Library/ user@127.0.0.1:/path/to/backup/dir That's all fine and dandy, but you need a machine with rsync for this approach to work. A slightly more technical but versatile approach is to install rsync on your reader, so you can run backup operations directly on the device itself. To install rsync on a Kobo device, download and install Kobo Stuff . Launch KOReader, open the top bar, switch to Tools -> More tools -> Terminal emulator , and tap Open terminal session . Run the rsync command that syncs the content of the Library directory to a Linux machine. Here's the command I use to back up the data to a Linux server running on my local network: rsync -avhz --delete -P -e \"ssh -p 22\" /mnt/onboard/Library/ user@127.0.0.1:/path/to/library Instead of laboriously entering long rsync commands using the built-in keyboard, you can speed up the process by adding the desired commands to the koreader/.ash_history file. Alternatively, you can write a shell script to automate the task. Create a text file named up.sh in the koreader/scripts/ and add the following code (adjust the examples as needed): #!/bin/sh rsync -avhz --delete -P -e \"ssh -p 22\" /mnt/onboard/Library/ USER@127.0.0.1:/path/to/library rsync -avhz --delete -P -e \"ssh -p 22\" /mnt/onboard/.adds/koreader/clipboard/ USER@127.0.0.1:/path/to/export Save the file and make it executable using the chmod +x /koreader/scripts/up.sh command. To launch the script in the ereader, open the terminal emulator and run the /path/to/koreader/scripts/up.sh command. If you happen to use a second ereader, and you want to download the saved settings and data, all you have to do is to create a shell script that runs the following commands: #!/bin/sh rsync -avhz --delete --no-g --no-o -P -e \"ssh -p 22\" USER@127.0.0.1:/path/to/library/ /mnt/onboard/Library rsync -avhz --delete --no-g --no-o -P -e \"ssh -p 22\" USER@127.0.0.1:/path/to/clipboard/ /mnt/onboard/.adds/koreader/clipboard Sync workaround Running the described rsync-based shell script to download KOReader data doesn't affect the currently opened book. A simple workaround is to open a book that you are not reading and then run the script. I usually open the KOreader Quickstart Guide book, and then run the script.","title":"Back up KOReader book metadata with rsync"},{"location":"13-koreader-rync/#configure-passwordless-ssh-access","text":"Every time you run the scripts described above, you'd be prompted to enter the password twice, which can quickly become a nuisance. To fix this, generate an SSH key pair in KOReader, and add the public key to the list of authorized keys on the remote machine. To generate an SSH key pair, launch the terminal emulator in KOReader and run the ssh-keygen command. Follow the prompts, but skip specifying a passphrase. Run the cat .ssh/*.pub command and copy the key. This generates a key pair in the /usr/local/niluje/usbnet/etc/dot.ssh/ directory. To make sure that the keys are there, run the ssh-agent sh -c 'ssh-add; ssh-add -L' command. Copy the /usr/local/niluje/usbnet/etc/dot.ssh/id_rsa.pub file to a Linux machine, and use the command below to add it to the authorized_keys file on the remote server: cat id_rsa.pub | ssh USER@127.0.0.1 \"mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys\" From now on you can run the shell scripts (or any comands and actions that require an SSH connection to the remote machine) without password.","title":"Configure passwordless SSH access"},{"location":"14-koreader-joplin/","text":"KOReader with Joplin In addition to exporting highlights as HTML, JSON, and plain text files, KOReader can also push notes from the ereader directly to the Joplin note-taking application. The initial setup process requires some work, but once it's done, pushing notes to Joplin is easy. First step is to configure Joplin. Launch the application, choose Tools -> Options , and switch to the Web clipper section. Press Enable Web Clipper Service and copy the automatically generated authorization token. Leave Joplin running. If you use Joplin on a Linux machine, install the socat package. To do this on Ubuntu and Linux Mint, run the sudo apt install socat command. Connect your ereader to the machine, enable Start USB storage in KOReader, and open the koreader/settings.reader.lua file for editing. Locate the [\"exporter\"] section and add the following entries to it (replace 127.0.0.1 with the actual IP address of the machine running Joplin, and replace authorization_token with the copied token): [ \"joplin_IP\" ] = \"127.0.0.1\", [\"joplin_token\"] = \"authorization_token\", [\"joplin_port\"] = 41185, [\"joplin_export\"] = true, Save the changes and safely disconnect the ereader. On the machine running Joplin, open the terminal, and run the following command: socat tcp-listen:41185,reuseaddr,fork tcp:localhost:41184 In KOReader, open the top bar, choose Tools -> Export highlights , make sure the Joplin option is enabled, and tap either Export all notes in this book or Export all notes in your library . Source: https://www.mobileread.com/forums/showthread.php?t=338169","title":"KOReader with Joplin"},{"location":"14-koreader-joplin/#koreader-with-joplin","text":"In addition to exporting highlights as HTML, JSON, and plain text files, KOReader can also push notes from the ereader directly to the Joplin note-taking application. The initial setup process requires some work, but once it's done, pushing notes to Joplin is easy. First step is to configure Joplin. Launch the application, choose Tools -> Options , and switch to the Web clipper section. Press Enable Web Clipper Service and copy the automatically generated authorization token. Leave Joplin running. If you use Joplin on a Linux machine, install the socat package. To do this on Ubuntu and Linux Mint, run the sudo apt install socat command. Connect your ereader to the machine, enable Start USB storage in KOReader, and open the koreader/settings.reader.lua file for editing. Locate the [\"exporter\"] section and add the following entries to it (replace 127.0.0.1 with the actual IP address of the machine running Joplin, and replace authorization_token with the copied token): [ \"joplin_IP\" ] = \"127.0.0.1\", [\"joplin_token\"] = \"authorization_token\", [\"joplin_port\"] = 41185, [\"joplin_export\"] = true, Save the changes and safely disconnect the ereader. On the machine running Joplin, open the terminal, and run the following command: socat tcp-listen:41185,reuseaddr,fork tcp:localhost:41184 In KOReader, open the top bar, choose Tools -> Export highlights , make sure the Joplin option is enabled, and tap either Export all notes in this book or Export all notes in your library . Source: https://www.mobileread.com/forums/showthread.php?t=338169","title":"KOReader with Joplin"},{"location":"15-ssh/","text":"Connect to the ereader via SSH In KOReader, open the top bar, switch to Settings -> Network -> SSH Server , enable the Login without password option, and start the SSH server. Once the SSH server is running, KOReader displays a dialog with connection information. Note the IP address of the ereader. Using a machine on the same network, establish an SSH connection to the ereader using the following command (replace 127.0.0.1 with the actual IP address of the ereader): ssh -p 2222 root@127.0.0.1 Using this feature, you can quickly push books to the ereader wirelessly and without using any additional tools or applications. On most Linux distributions the default file browser can handle the SSH and SFTP protocols. So you can access the ereader's storage by specifying its address in the location bar of the file browser. For example, ssh://root@127.0.0.1:2222 . Add an authorized SSH key The easiest way to connect to KOReader via SSH is to enable the Login without password option. The easiest approach is also the least secure one, as anyone on the same network can get root access to the ereader. So it's a good idea to allow SSH access only to authorized devices. To do this, you need to generate an SSH key pair on the device you want to connect from to your ereader. To generate an SSH key pair on a Linux machine, run the ssh-keygen command in the terminal. Follow the prompts, but skip specifying a passphrase. Run the cat .ssh/*.pub command and copy the key. Connect the ereader to the machine and create the authorized_keys file in the koreader/settings/SSH directory. Open the file for editing, paste the copied key in it, and save the changes. From now on, you don't have to enter a password when you connect to the ereader from the authorized machine.","title":"Connect to the ereader via SSH"},{"location":"15-ssh/#connect-to-the-ereader-via-ssh","text":"In KOReader, open the top bar, switch to Settings -> Network -> SSH Server , enable the Login without password option, and start the SSH server. Once the SSH server is running, KOReader displays a dialog with connection information. Note the IP address of the ereader. Using a machine on the same network, establish an SSH connection to the ereader using the following command (replace 127.0.0.1 with the actual IP address of the ereader): ssh -p 2222 root@127.0.0.1 Using this feature, you can quickly push books to the ereader wirelessly and without using any additional tools or applications. On most Linux distributions the default file browser can handle the SSH and SFTP protocols. So you can access the ereader's storage by specifying its address in the location bar of the file browser. For example, ssh://root@127.0.0.1:2222 .","title":"Connect to the ereader via SSH"},{"location":"15-ssh/#add-an-authorized-ssh-key","text":"The easiest way to connect to KOReader via SSH is to enable the Login without password option. The easiest approach is also the least secure one, as anyone on the same network can get root access to the ereader. So it's a good idea to allow SSH access only to authorized devices. To do this, you need to generate an SSH key pair on the device you want to connect from to your ereader. To generate an SSH key pair on a Linux machine, run the ssh-keygen command in the terminal. Follow the prompts, but skip specifying a passphrase. Run the cat .ssh/*.pub command and copy the key. Connect the ereader to the machine and create the authorized_keys file in the koreader/settings/SSH directory. Open the file for editing, paste the copied key in it, and save the changes. From now on, you don't have to enter a password when you connect to the ereader from the authorized machine.","title":"Add an authorized SSH key"},{"location":"16-resources/","text":"Useful Kobo and KOReader resources KOReader forum https://www.mobileread.com/forums/forumdisplay.php?f=276 Kobo forum https://www.mobileread.com/forums/forumdisplay.php?f=223 Kobo Stuff https://www.mobileread.com/forums/showthread.php?t=254214 NickelMenu https://pgaskin.net/NickelMenu/ KoHighlights https://github.com/noembryo/KoHighlights","title":"Useful Kobo and KOReader resources"},{"location":"16-resources/#useful-kobo-and-koreader-resources","text":"","title":"Useful Kobo and KOReader resources"},{"location":"16-resources/#koreader-forum","text":"https://www.mobileread.com/forums/forumdisplay.php?f=276","title":"KOReader forum"},{"location":"16-resources/#kobo-forum","text":"https://www.mobileread.com/forums/forumdisplay.php?f=223","title":"Kobo forum"},{"location":"16-resources/#kobo-stuff","text":"https://www.mobileread.com/forums/showthread.php?t=254214","title":"Kobo Stuff"},{"location":"16-resources/#nickelmenu","text":"https://pgaskin.net/NickelMenu/","title":"NickelMenu"},{"location":"16-resources/#kohighlights","text":"https://github.com/noembryo/KoHighlights","title":"KoHighlights"}]}